<?xml version="1.0" encoding="UTF-8"?>
<pmd>
    <useProjectRuleSet>false</useProjectRuleSet>
    <ruleSetFile>.ruleset</ruleSetFile>
    <excludePatterns/>
    <includePatterns/>
    <rules>
        <rule>
            <name>AvoidDeeplyNestedIfStmts</name>
            <ruleset>Complexity</ruleset>
        </rule>
        <rule>
            <name>ExcessiveParameterList</name>
            <ruleset>Complexity</ruleset>
        </rule>
        <rule>
            <name>NcssMethodCount</name>
            <ruleset>Complexity</ruleset>
        </rule>
        <rule>
            <name>NcssTypeCount</name>
            <ruleset>Complexity</ruleset>
        </rule>
        <rule>
            <name>StdCyclomaticComplexity</name>
            <ruleset>Complexity</ruleset>
        </rule>
        <rule>
            <name>TooManyFields</name>
            <ruleset>Complexity</ruleset>
        </rule>
        <rule>
            <name>ExcessivePublicCount</name>
            <ruleset>Complexity</ruleset>
        </rule>
        <rule>
            <name>AvoidSoqlInLoops</name>
            <ruleset>Performance</ruleset>
        </rule>
        <rule>
            <name>AvoidDmlStatementsInLoops</name>
            <ruleset>Performance</ruleset>
        </rule>
        <rule>
            <name>VariableNamingConventions</name>
            <ruleset>Style</ruleset>
        </rule>
        <rule>
            <name>MethodNamingConventions</name>
            <ruleset>Style</ruleset>
        </rule>
        <rule>
            <name>ClassNamingConventions</name>
            <ruleset>Style</ruleset>
        </rule>
        <rule>
            <name>MethodWithSameNameAsEnclosingClass</name>
            <ruleset>Style</ruleset>
        </rule>
        <rule>
            <name>AvoidLogicInTrigger</name>
            <ruleset>Style</ruleset>
        </rule>
        <rule>
            <name>AvoidGlobalModifier</name>
            <ruleset>Style</ruleset>
        </rule>
        <rule>
            <name>ApexUnitTestClassShouldHaveAsserts</name>
            <ruleset>ApexUnit</ruleset>
        </rule>
        <rule>
            <name>ApexUnitTestShouldNotUseSeeAllDataTrue</name>
            <ruleset>ApexUnit</ruleset>
        </rule>
        <rule>
            <name>ApexSharingViolations</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>ApexOpenRedirect</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>ApexInsecureEndpoint</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>ApexXSSFromURLParam</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>ApexXSSFromEscapeFalse</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>ApexCSRF</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>ApexSOQLInjection</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>ApexCRUDViolation</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>ApexDangerousMethods</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>ApexSuggestUsingNamedCred</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>ForLoopsMustUseBraces</name>
            <ruleset>Braces</ruleset>
        </rule>
        <rule>
            <name>AssignmentInOperand</name>
            <ruleset>Basic Ecmascript</ruleset>
        </rule>
        <rule>
            <name>InnaccurateNumericLiteral</name>
            <ruleset>Basic Ecmascript</ruleset>
        </rule>
        <rule>
            <name>ConsistentReturn</name>
            <ruleset>Basic Ecmascript</ruleset>
        </rule>
        <rule>
            <name>ScopeForInVariable</name>
            <ruleset>Basic Ecmascript</ruleset>
        </rule>
        <rule>
            <name>EqualComparison</name>
            <ruleset>Basic Ecmascript</ruleset>
        </rule>
        <rule>
            <name>GlobalVariable</name>
            <ruleset>Basic Ecmascript</ruleset>
        </rule>
        <rule>
            <name>AvoidTrailingComma</name>
            <ruleset>Basic Ecmascript</ruleset>
        </rule>
        <rule>
            <name>UseBaseWithParseInt</name>
            <ruleset>Basic Ecmascript</ruleset>
        </rule>
        <rule>
            <name>ForLoopsMustUseBraces</name>
            <ruleset>Braces</ruleset>
        </rule>
        <rule>
            <name>UnnecessaryParentheses</name>
            <ruleset>Unnecessary</ruleset>
        </rule>
        <rule>
            <name>NoElseReturn</name>
            <ruleset>Unnecessary</ruleset>
        </rule>
        <rule>
            <name>CallSuperFirst</name>
            <ruleset>Android</ruleset>
        </rule>
        <rule>
            <name>CallSuperLast</name>
            <ruleset>Android</ruleset>
        </rule>
        <rule>
            <name>DoNotHardCodeSDCard</name>
            <ruleset>Android</ruleset>
        </rule>
        <rule>
            <name>JumbledIncrementer</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>ForLoopShouldBeWhileLoop</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>DoubleCheckedLocking</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>BooleanInstantiation</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>CollapsibleIfStatements</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>ClassCastExceptionWithToArray</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>AvoidDecimalLiteralsInBigDecimalConstructor</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>MisplacedNullCheck</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>AvoidThreadGroup</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>BrokenNullCheck</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>BigIntegerInstantiation</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>AvoidUsingOctalValues</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>AvoidUsingHardCodedIP</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>CheckResultSet</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>AvoidMultipleUnaryOperators</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>ExtendsObject</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>CheckSkipResult</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>AvoidBranchingStatementAsLastInLoop</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>DontCallThreadRun</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>DontUseFloatTypeForLoopIndices</name>
            <ruleset>Basic</ruleset>
        </rule>
        <rule>
            <name>WhileLoopsMustUseBraces</name>
            <ruleset>Braces</ruleset>
        </rule>
        <rule>
            <name>ForLoopsMustUseBraces</name>
            <ruleset>Braces</ruleset>
        </rule>
        <rule>
            <name>CloneThrowsCloneNotSupportedException</name>
            <ruleset>Clone Implementation</ruleset>
        </rule>
        <rule>
            <name>CloneMethodMustImplementCloneable</name>
            <ruleset>Clone Implementation</ruleset>
        </rule>
        <rule>
            <name>CloneMethodReturnTypeMustMatchClassName</name>
            <ruleset>Clone Implementation</ruleset>
        </rule>
        <rule>
            <name>CloneMethodMustBePublic</name>
            <ruleset>Clone Implementation</ruleset>
        </rule>
        <rule>
            <name>ExcessiveMethodLength</name>
            <ruleset>Code Size</ruleset>
        </rule>
        <rule>
            <name>ExcessiveParameterList</name>
            <ruleset>Code Size</ruleset>
        </rule>
        <rule>
            <name>CyclomaticComplexity</name>
            <ruleset>Code Size</ruleset>
        </rule>
        <rule>
            <name>ExcessivePublicCount</name>
            <ruleset>Code Size</ruleset>
        </rule>
        <rule>
            <name>TooManyFields</name>
            <ruleset>Code Size</ruleset>
        </rule>
        <rule>
            <name>TooManyMethods</name>
            <ruleset>Code Size</ruleset>
        </rule>
        <rule>
            <name>CommentRequired</name>
            <ruleset>Comments</ruleset>
        </rule>
        <rule>
            <name>CommentSize</name>
            <ruleset>Comments</ruleset>
        </rule>
        <rule>
            <name>CommentContent</name>
            <ruleset>Comments</ruleset>
        </rule>
        <rule>
            <name>CommentDefaultAccessModifier</name>
            <ruleset>Comments</ruleset>
        </rule>
        <rule>
            <name>AssignmentInOperand</name>
            <ruleset>Controversial</ruleset>
        </rule>
        <rule>
            <name>AtLeastOneConstructor</name>
            <ruleset>Controversial</ruleset>
        </rule>
        <rule>
            <name>DontImportSun</name>
            <ruleset>Controversial</ruleset>
        </rule>
        <rule>
            <name>CallSuperInConstructor</name>
            <ruleset>Controversial</ruleset>
        </rule>
        <rule>
            <name>UnnecessaryParentheses</name>
            <ruleset>Controversial</ruleset>
        </rule>
        <rule>
            <name>DataflowAnomalyAnalysis</name>
            <ruleset>Controversial</ruleset>
        </rule>
        <rule>
            <name>AvoidFinalLocalVariable</name>
            <ruleset>Controversial</ruleset>
        </rule>
        <rule>
            <name>AvoidUsingShortType</name>
            <ruleset>Controversial</ruleset>
        </rule>
        <rule>
            <name>AvoidUsingVolatile</name>
            <ruleset>Controversial</ruleset>
        </rule>
        <rule>
            <name>AvoidUsingNativeCode</name>
            <ruleset>Controversial</ruleset>
        </rule>
        <rule>
            <name>AvoidAccessibilityAlteration</name>
            <ruleset>Controversial</ruleset>
        </rule>
        <rule>
            <name>OneDeclarationPerLine</name>
            <ruleset>Controversial</ruleset>
        </rule>
        <rule>
            <name>AvoidPrefixingMethodParameters</name>
            <ruleset>Controversial</ruleset>
        </rule>
        <rule>
            <name>AvoidLiteralsInIfCondition</name>
            <ruleset>Controversial</ruleset>
        </rule>
        <rule>
            <name>UseObjectForClearerAPI</name>
            <ruleset>Controversial</ruleset>
        </rule>
        <rule>
            <name>UseConcurrentHashMap</name>
            <ruleset>Controversial</ruleset>
        </rule>
        <rule>
            <name>CouplingBetweenObjects</name>
            <ruleset>Coupling</ruleset>
        </rule>
        <rule>
            <name>ExcessiveImports</name>
            <ruleset>Coupling</ruleset>
        </rule>
        <rule>
            <name>LoosePackageCoupling</name>
            <ruleset>Coupling</ruleset>
        </rule>
        <rule>
            <name>LawOfDemeter</name>
            <ruleset>Coupling</ruleset>
        </rule>
        <rule>
            <name>SimplifyBooleanReturns</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>SimplifyBooleanExpressions</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AvoidDeeplyNestedIfStmts</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AvoidReassigningParameters</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ConstructorCallsOverridableMethod</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>FinalFieldCouldBeStatic</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>CloseResource</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>DefaultLabelNotLastInSwitchStmt</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>BadComparison</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>EqualsNull</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>InstantiationToGetClass</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>IdempotentOperations</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ImmutableField</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AvoidProtectedFieldInFinalClass</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AssignmentToNonFinalStatic</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>MissingStaticMethodInNonInstantiatableClass</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AvoidSynchronizedAtMethodLevel</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>MissingBreakInSwitch</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AvoidInstanceofChecksInCatchClause</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>SimplifyConditional</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>PositionLiteralsFirstInCaseInsensitiveComparisons</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>SingleMethodSingleton</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>SingletonClassReturningNewInstance</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ClassWithOnlyPrivateConstructorsShouldBeFinal</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>EmptyMethodInAbstractClassShouldBeAbstract</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>SingularField</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ReturnEmptyArrayRatherThanNull</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>TooFewBranchesForASwitchStatement</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>LogicInversion</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>FieldDeclarationsShouldBeAtStartOfClass</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>GodClass</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AvoidProtectedMethodInFinalClassNotExtending</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AccessorMethodGeneration</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>EmptyCatchBlock</name>
            <ruleset>Empty Code</ruleset>
        </rule>
        <rule>
            <name>EmptyIfStmt</name>
            <ruleset>Empty Code</ruleset>
        </rule>
        <rule>
            <name>EmptyFinallyBlock</name>
            <ruleset>Empty Code</ruleset>
        </rule>
        <rule>
            <name>EmptyStatementNotInLoop</name>
            <ruleset>Empty Code</ruleset>
        </rule>
        <rule>
            <name>EmptyInitializer</name>
            <ruleset>Empty Code</ruleset>
        </rule>
        <rule>
            <name>EmptyStatementBlock</name>
            <ruleset>Empty Code</ruleset>
        </rule>
        <rule>
            <name>EmptyFinalizer</name>
            <ruleset>Finalizer</ruleset>
        </rule>
        <rule>
            <name>FinalizeShouldBeProtected</name>
            <ruleset>Finalizer</ruleset>
        </rule>
        <rule>
            <name>AvoidCallingFinalize</name>
            <ruleset>Finalizer</ruleset>
        </rule>
        <rule>
            <name>DuplicateImports</name>
            <ruleset>Import Statements</ruleset>
        </rule>
        <rule>
            <name>DontImportJavaLang</name>
            <ruleset>Import Statements</ruleset>
        </rule>
        <rule>
            <name>ImportFromSamePackage</name>
            <ruleset>Import Statements</ruleset>
        </rule>
        <rule>
            <name>TooManyStaticImports</name>
            <ruleset>Import Statements</ruleset>
        </rule>
        <rule>
            <name>UseProperClassLoader</name>
            <ruleset>J2EE</ruleset>
        </rule>
        <rule>
            <name>MDBAndSessionBeanNamingConvention</name>
            <ruleset>J2EE</ruleset>
        </rule>
        <rule>
            <name>RemoteSessionInterfaceNamingConvention</name>
            <ruleset>J2EE</ruleset>
        </rule>
        <rule>
            <name>LocalInterfaceSessionNamingConvention</name>
            <ruleset>J2EE</ruleset>
        </rule>
        <rule>
            <name>LocalHomeNamingConvention</name>
            <ruleset>J2EE</ruleset>
        </rule>
        <rule>
            <name>DoNotCallSystemExit</name>
            <ruleset>J2EE</ruleset>
        </rule>
        <rule>
            <name>StaticEJBFieldShouldBeFinal</name>
            <ruleset>J2EE</ruleset>
        </rule>
        <rule>
            <name>DoNotUseThreads</name>
            <ruleset>J2EE</ruleset>
        </rule>
        <rule>
            <name>BeanMembersShouldSerialize</name>
            <ruleset>JavaBeans</ruleset>
        </rule>
        <rule>
            <name>MissingSerialVersionUID</name>
            <ruleset>JavaBeans</ruleset>
        </rule>
        <rule>
            <name>JUnitTestsShouldIncludeAssert</name>
            <ruleset>JUnit</ruleset>
        </rule>
        <rule>
            <name>TestClassWithoutTestCases</name>
            <ruleset>JUnit</ruleset>
        </rule>
        <rule>
            <name>SimplifyBooleanAssertion</name>
            <ruleset>JUnit</ruleset>
        </rule>
        <rule>
            <name>UseCorrectExceptionLogging</name>
            <ruleset>Jakarta Commons Logging</ruleset>
        </rule>
        <rule>
            <name>ProperLogger</name>
            <ruleset>Jakarta Commons Logging</ruleset>
        </rule>
        <rule>
            <name>GuardDebugLogging</name>
            <ruleset>Jakarta Commons Logging</ruleset>
        </rule>
        <rule>
            <name>GuardLogStatement</name>
            <ruleset>Jakarta Commons Logging</ruleset>
        </rule>
        <rule>
            <name>LoggerIsNotStaticFinal</name>
            <ruleset>Java Logging</ruleset>
        </rule>
        <rule>
            <name>AvoidPrintStackTrace</name>
            <ruleset>Java Logging</ruleset>
        </rule>
        <rule>
            <name>GuardLogStatementJavaUtil</name>
            <ruleset>Java Logging</ruleset>
        </rule>
        <rule>
            <name>InvalidSlf4jMessageFormat</name>
            <ruleset>Java Logging</ruleset>
        </rule>
        <rule>
            <name>ReplaceVectorWithList</name>
            <ruleset>Migration</ruleset>
        </rule>
        <rule>
            <name>ReplaceHashtableWithMap</name>
            <ruleset>Migration</ruleset>
        </rule>
        <rule>
            <name>ReplaceEnumerationWithIterator</name>
            <ruleset>Migration</ruleset>
        </rule>
        <rule>
            <name>AvoidEnumAsIdentifier</name>
            <ruleset>Migration</ruleset>
        </rule>
        <rule>
            <name>AvoidAssertAsIdentifier</name>
            <ruleset>Migration</ruleset>
        </rule>
        <rule>
            <name>IntegerInstantiation</name>
            <ruleset>Migration</ruleset>
        </rule>
        <rule>
            <name>ByteInstantiation</name>
            <ruleset>Migration</ruleset>
        </rule>
        <rule>
            <name>JUnit4SuitesShouldUseSuiteAnnotation</name>
            <ruleset>Migration</ruleset>
        </rule>
        <rule>
            <name>JUnitUseExpected</name>
            <ruleset>Migration</ruleset>
        </rule>
        <rule>
            <name>MethodNamingConventions</name>
            <ruleset>Naming</ruleset>
        </rule>
        <rule>
            <name>ClassNamingConventions</name>
            <ruleset>Naming</ruleset>
        </rule>
        <rule>
            <name>AvoidDollarSigns</name>
            <ruleset>Naming</ruleset>
        </rule>
        <rule>
            <name>MethodWithSameNameAsEnclosingClass</name>
            <ruleset>Naming</ruleset>
        </rule>
        <rule>
            <name>AvoidFieldNameMatchingTypeName</name>
            <ruleset>Naming</ruleset>
        </rule>
        <rule>
            <name>AvoidFieldNameMatchingMethodName</name>
            <ruleset>Naming</ruleset>
        </rule>
        <rule>
            <name>PackageCase</name>
            <ruleset>Naming</ruleset>
        </rule>
        <rule>
            <name>MisleadingVariableName</name>
            <ruleset>Naming</ruleset>
        </rule>
        <rule>
            <name>BooleanGetMethodName</name>
            <ruleset>Naming</ruleset>
        </rule>
        <rule>
            <name>GenericsNaming</name>
            <ruleset>Naming</ruleset>
        </rule>
        <rule>
            <name>LocalVariableCouldBeFinal</name>
            <ruleset>Optimization</ruleset>
        </rule>
        <rule>
            <name>MethodArgumentCouldBeFinal</name>
            <ruleset>Optimization</ruleset>
        </rule>
        <rule>
            <name>AvoidInstantiatingObjectsInLoops</name>
            <ruleset>Optimization</ruleset>
        </rule>
        <rule>
            <name>SimplifyStartsWith</name>
            <ruleset>Optimization</ruleset>
        </rule>
        <rule>
            <name>AvoidArrayLoops</name>
            <ruleset>Optimization</ruleset>
        </rule>
        <rule>
            <name>AvoidCatchingThrowable</name>
            <ruleset>Strict Exceptions</ruleset>
        </rule>
        <rule>
            <name>SignatureDeclareThrowsException</name>
            <ruleset>Strict Exceptions</ruleset>
        </rule>
        <rule>
            <name>ExceptionAsFlowControl</name>
            <ruleset>Strict Exceptions</ruleset>
        </rule>
        <rule>
            <name>AvoidCatchingNPE</name>
            <ruleset>Strict Exceptions</ruleset>
        </rule>
        <rule>
            <name>AvoidThrowingRawExceptionTypes</name>
            <ruleset>Strict Exceptions</ruleset>
        </rule>
        <rule>
            <name>AvoidThrowingNullPointerException</name>
            <ruleset>Strict Exceptions</ruleset>
        </rule>
        <rule>
            <name>AvoidRethrowingException</name>
            <ruleset>Strict Exceptions</ruleset>
        </rule>
        <rule>
            <name>DoNotExtendJavaLangError</name>
            <ruleset>Strict Exceptions</ruleset>
        </rule>
        <rule>
            <name>DoNotThrowExceptionInFinally</name>
            <ruleset>Strict Exceptions</ruleset>
        </rule>
        <rule>
            <name>AvoidThrowingNewInstanceOfSameException</name>
            <ruleset>Strict Exceptions</ruleset>
        </rule>
        <rule>
            <name>AvoidCatchingGenericException</name>
            <ruleset>Strict Exceptions</ruleset>
        </rule>
        <rule>
            <name>AvoidLosingExceptionInformation</name>
            <ruleset>Strict Exceptions</ruleset>
        </rule>
        <rule>
            <name>AvoidDuplicateLiterals</name>
            <ruleset>String and StringBuffer</ruleset>
        </rule>
        <rule>
            <name>StringToString</name>
            <ruleset>String and StringBuffer</ruleset>
        </rule>
        <rule>
            <name>InefficientStringBuffering</name>
            <ruleset>String and StringBuffer</ruleset>
        </rule>
        <rule>
            <name>AppendCharacterWithChar</name>
            <ruleset>String and StringBuffer</ruleset>
        </rule>
        <rule>
            <name>ConsecutiveLiteralAppends</name>
            <ruleset>String and StringBuffer</ruleset>
        </rule>
        <rule>
            <name>InefficientEmptyStringCheck</name>
            <ruleset>String and StringBuffer</ruleset>
        </rule>
        <rule>
            <name>InsufficientStringBufferDeclaration</name>
            <ruleset>String and StringBuffer</ruleset>
        </rule>
        <rule>
            <name>UseEqualsToCompareStrings</name>
            <ruleset>String and StringBuffer</ruleset>
        </rule>
        <rule>
            <name>AvoidStringBufferField</name>
            <ruleset>String and StringBuffer</ruleset>
        </rule>
        <rule>
            <name>MethodReturnsInternalArray</name>
            <ruleset>Security Code Guidelines</ruleset>
        </rule>
        <rule>
            <name>ArrayIsStoredDirectly</name>
            <ruleset>Security Code Guidelines</ruleset>
        </rule>
        <rule>
            <name>UnusedNullCheckInEquals</name>
            <ruleset>Unnecessary</ruleset>
        </rule>
        <rule>
            <name>NoInlineStyleInformation</name>
            <ruleset>Basic JSP</ruleset>
        </rule>
        <rule>
            <name>NoClassAttribute</name>
            <ruleset>Basic JSP</ruleset>
        </rule>
        <rule>
            <name>NoHtmlComments</name>
            <ruleset>Basic JSP</ruleset>
        </rule>
        <rule>
            <name>DuplicateJspImports</name>
            <ruleset>Basic JSP</ruleset>
        </rule>
        <rule>
            <name>JspEncoding</name>
            <ruleset>Basic JSP</ruleset>
        </rule>
        <rule>
            <name>NoInlineScript</name>
            <ruleset>Basic JSP</ruleset>
        </rule>
        <rule>
            <name>DontNestJsfInJstlIteration</name>
            <ruleset>Basic JSF</ruleset>
        </rule>
        <rule>
            <name>ExcessiveMethodLength</name>
            <ruleset>Code Size</ruleset>
        </rule>
        <rule>
            <name>ExcessiveObjectLength</name>
            <ruleset>Code Size</ruleset>
        </rule>
        <rule>
            <name>ExcessiveTypeLength</name>
            <ruleset>Code Size</ruleset>
        </rule>
        <rule>
            <name>ExcessivePackageBodyLength</name>
            <ruleset>Code Size</ruleset>
        </rule>
        <rule>
            <name>ExcessivePackageSpecificationLength</name>
            <ruleset>Code Size</ruleset>
        </rule>
        <rule>
            <name>CyclomaticComplexity</name>
            <ruleset>Code Size</ruleset>
        </rule>
        <rule>
            <name>TooManyFields</name>
            <ruleset>Code Size</ruleset>
        </rule>
        <rule>
            <name>TomKytesDespair</name>
            <ruleset>Tom Kyte's Despair</ruleset>
        </rule>
        <rule>
            <name>MisplacedPragma</name>
            <ruleset>Strict Syntax</ruleset>
        </rule>
        <rule>
            <name>InvalidDependencyTypes</name>
            <ruleset>Basic POM</ruleset>
        </rule>
        <rule>
            <name>AvoidDeeplyNestedIfStmts</name>
            <ruleset>Basic Velocity</ruleset>
        </rule>
        <rule>
            <name>CollapsibleIfStatements</name>
            <ruleset>Basic Velocity</ruleset>
        </rule>
        <rule>
            <name>ExcessiveTemplateLength</name>
            <ruleset>Basic Velocity</ruleset>
        </rule>
        <rule>
            <name>AvoidReassigningParameters</name>
            <ruleset>Basic Velocity</ruleset>
        </rule>
        <rule>
            <name>EmptyIfStmt</name>
            <ruleset>Basic Velocity</ruleset>
        </rule>
        <rule>
            <name>EmptyForeachStmt</name>
            <ruleset>Basic Velocity</ruleset>
        </rule>
        <rule>
            <name>UnusedMacroParameter</name>
            <ruleset>Basic Velocity</ruleset>
        </rule>
        <rule>
            <name>NoInlineJavaScript</name>
            <ruleset>Basic Velocity</ruleset>
        </rule>
        <rule>
            <name>NoInlineStyles</name>
            <ruleset>Basic Velocity</ruleset>
        </rule>
        <rule>
            <name>UseConcatOnce</name>
            <ruleset>XPath in XSL</ruleset>
        </rule>
        <rule>
            <name>AvoidAxisNavigation</name>
            <ruleset>XPath in XSL</ruleset>
        </rule>
    </rules>
    <includeDerivedFiles>false</includeDerivedFiles>
    <violationsAsErrors>true</violationsAsErrors>
    <fullBuildEnabled>true</fullBuildEnabled>
</pmd>
